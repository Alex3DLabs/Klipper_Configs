[include mainsail.cfg]
[virtual_sdcard]
path: /home/biqu/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

# This file contains common pin mappings for the BIGTREETECH Manta M8P
# To use this config, the firmware should be compiled for the
# STM32G0B1 with a "8KiB bootloader" "8 MHz crystal"
# and "USB (on PA11/PA12)" or "CAN bus (on PD12/PD13)".
##############################
# See docs/Config_Reference.md for a description of parameters.

##############################
# 
# File Created by Alex Foradori for FlashForge Creator Pro 2 IDEX printer running Klipper on a BTT Manta M8P v1.1
# File created on 7-15-2023
# 
##############################


##############################
# Macros 
##############################
[include fluidd.cfg]
[include macros.cfg]



##############################
# MCU 
##############################

[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_18003F0011504B4633373520-if00
restart_method: command


##############################
# Printer Info
##############################

[printer]
kinematics: cartesian
max_velocity: 300  
max_accel: 3000             #Max 4000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
#   Temperature Sensors
#####################################################################

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 0
max_temp: 100


##############################
# Stepper Configs
##############################

##############################
# Left Carriage
##############################
[stepper_x]
#Motor 1
step_pin: PE2
dir_pin: !PB4
enable_pin: !PC11
microsteps: 16
full_steps_per_rotation: 200
rotation_distance: 33.2
endstop_pin: PF3
position_endstop: -18
position_min: -18
position_max: 200
homing_speed: 50

[tmc2209 stepper_x]
uart_pin: PC10
#diag_pin: PF3
run_current: 0.650
stealthchop_threshold: 999999

##############################
# Right Carriage 
##############################
# Definition for the secondary carriage (Motor 3) and extruder1
[dual_carriage]
#Motor 3
axis: x
step_pin: PD7
dir_pin: PD6
enable_pin: !PF10
microsteps: 16
rotation_distance: 33.2
full_steps_per_rotation: 200
endstop_pin: PF4
position_min: 0
position_endstop: 218
position_max: 218
homing_speed: 50
#homing_positive_dir: false

[tmc2209 dual_carriage]
uart_pin: PF9
#diag_pin: PF5
run_current: 0.650
stealthchop_threshold: 999999

#############################
# Y Axis
##############################
[stepper_y]
#Motor 2
step_pin: PF12
dir_pin: !PF11
enable_pin: !PB3
microsteps: 16
rotation_distance: 33.2
full_steps_per_rotation: 200
endstop_pin: !PF5
position_endstop: -3
position_min: -3
position_max: 145
homing_speed: 50

[tmc2209 stepper_y]
uart_pin: PF13
#diag_pin: PF4
run_current: 0.650
stealthchop_threshold: 999999

#############################
# Z Axis
##############################
#Stepper Z Motor 4
[stepper_z]
step_pin: !PD3
dir_pin: !PD2
enable_pin: !PD5
microsteps: 16
full_steps_per_rotation: 200
rotation_distance: 8
endstop_pin: !PC0
#position_endstop: 0
position_min: -2
position_max: 147
homing_speed: 10
second_homing_speed: 3.0
homing_retract_dist: 10.0

[tmc2209 stepper_z]
uart_pin: PD4
#diag_pin: PC0
run_current: 0.650
stealthchop_threshold: 999999

##############################
# Left Extruder 
##############################

[extruder]
#Motor 5
step_pin: PA10
dir_pin: PA14
enable_pin: !PA15
microsteps: 16
rotation_distance: 33.500
nozzle_diameter: 0.4
filament_diameter: 1.75
heater_pin: PB5 # HE1
#sensor_type: EPCOS 100K B57560G104F
sensor_type: Generic 3950
#sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA2 # T0
#control: pid
#pid_Kp: 22.2
#pid_Ki: 1.08
#pid_Kd: 114
min_temp: 0
max_temp: 280

[tmc2209 extruder]
uart_pin: PF8
run_current: 0.650
stealthchop_threshold: 999999

# Helper script to park the carriage (called from T0 and T1 macros)
[gcode_macro PARK_extruder]
gcode:
    SAVE_GCODE_STATE NAME=park0
    G90
    #G0 X{printer.configuration.settings.stepper_x.position_endstop}
    G1 X-18
    RESTORE_GCODE_STATE NAME=park0

# Activate the primary extruder
[gcode_macro T0]
gcode:
    PARK_{printer.toolhead.extruder}
    ACTIVATE_EXTRUDER EXTRUDER=extruder
    SET_DUAL_CARRIAGE CARRIAGE=0
    SET_GCODE_OFFSET Y=0
    SET_GCODE_VARIABLE MACRO=FAN_VARIABLE VARIABLE=active_fan VALUE=0
    CARRIAGE_PRINT_FAN 

##############################
# Right Extruder 
##############################
[extruder1]
#Motor 6
step_pin: PC9
dir_pin: PC8
enable_pin: !PD1
microsteps: 16
rotation_distance: 33.500
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PB6
#sensor_type: EPCOS 100K B57560G104F
sensor_type: Generic 3950
#sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA1 
control: pid
pid_Kp: 22.2
pid_Ki: 1.08
pid_Kd: 114
min_temp: 0
max_temp: 280

[tmc2209 extruder1]
uart_pin: PD0
run_current: 0.650
stealthchop_threshold: 999999

[gcode_macro PARK_extruder1]
gcode:
    SAVE_GCODE_STATE NAME=park1
    G90
    #G0 X{printer.configuration.settings.dual_carriage.position_endstop}
    G1 X218
    RESTORE_GCODE_STATE NAME=park1

[gcode_macro T1]
gcode:
    PARK_{printer.toolhead.extruder}
    ACTIVATE_EXTRUDER EXTRUDER=extruder1
    SET_DUAL_CARRIAGE CARRIAGE=1
    SET_GCODE_OFFSET Y=15
    SET_GCODE_VARIABLE MACRO=FAN_VARIABLE VARIABLE=active_fan VALUE=1
    CARRIAGE_PRINT_FAN

##############################
# Heated Bed 
##############################

[heater_bed]
heater_pin: PE3
sensor_type: Generic 3950
sensor_pin: PA0 # TB
#control: watermark
min_temp: 0
max_temp: 110


##############################
# Fans
##############################

# X1 print cooling fan
[fan_generic fan]
pin: PE0
cycle_time: 0.0100
kick_start_time: 1.00

# X2 print cooling fan
[fan_generic fan1]
pin: PE5
cycle_time: 0.0100
kick_start_time: 1.000

#[controller_fan controller_fan]
[controller_fan controller_fan]
pin: PE6
kick_start_time: 0.5
heater: heater_bed
#[fan_generic chamber_fan]
#pin: PE6
#max_power: 1.0
#shutdown_speed: 0.0

[fan_generic chamber_fan2]
#[heater_fan fan5]
pin: PB8
tachometer_pin: PC14


[heater_fan hotend_fan]
#[heater_fan fan2]
pin: PC12
heater: extruder
heater_temp: 50.0

[heater_fan hotend_fan1]
#[heater_fan fan4]
pin: PE4
heater: extruder1
heater_temp: 50.0


##############################
# Bed Info 
##############################
[bed_screws]
screw1: 135,2
screw1_name: front screw
screw2: 80,160
screw2_name: back left
screw3: 195,160
screw3_name: back right


#[safe_z_home]
#home_xy_position: 132,75 										# these coordinates must NOT be greater than the values specified in "position_max:" for the X and Y steppers
#speed: 50.0
#z_hop: 5


##############################
# Board Pins 
##############################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE9, EXP1_2=PE10,
    EXP1_3=PE11, EXP1_4=PE12,
    EXP1_5=PE13, EXP1_6=PE14,    # Slot in the socket on this side
    EXP1_7=PE15, EXP1_8=PB10,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PB14, EXP2_2=PB13,
    EXP2_3=PF7, EXP2_4=PB12,
    EXP2_5=PE7, EXP2_6=PB11,      # Slot in the socket on this side
    EXP2_7=PE8, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<NC>

# See the sample-lcd.cfg file for definitions of common LCD displays.


[display]
##  mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

[neopixel btt_mini12864]
##  To control Neopixel RGB in mini12864 display
pin: EXP1_6
chain_count: 3
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 1.0
color_order: RGB

##  Set RGB values on boot up for each Neopixel. 
##  Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
        SET_LED LED=btt_mini12864 RED=0 GREEN=0 BLUE=1 INDEX=2 TRANSMIT=0
        SET_LED LED=btt_mini12864 RED=0 GREEN=0 BLUE=1 INDEX=3 


[gcode_macro FAN_VARIABLE]
variable_active_fan: 0
gcode:

#--- Carriages print cooling FANs ---
    variable_fan: 'fan'    # carriage X1
    variable_fan1: 'fan1'   # carriage X2
#--- Other user define FANs ---
variable_fan2: 'fan2'     
variable_fan3: 'fan3'
variable_fan4: 'fan4'  
#variable_fan5: 'fan5'


##########################################################
# PRINTER FANS MANAGEMENT
# Redefine G-code command M106 and M107 
##########################################################
[gcode_macro M106]
description: Override "M106" to allow multiple extruders.
gcode:

    
    {% set raw_speed = params.S|default(255)|float %}
    {% set fan_speed = (raw_speed / 255.0)|round(2) %} 

    {% if (params.P) is defined %}  
      {% set target_fan = params.P|int %}     
      {% set default_fan = ('fan', 'fan1', 'fan2', 'fan3', 'fan4', 'fan5')[target_fan] %}  
       SET_FAN_SPEED FAN={default_fan} SPEED={fan_speed}
    {% else %}
        ### carriages print cooling FAN   
        CARRIAGE_PRINT_FAN SPEED={fan_speed}       
    {% endif %}

#=============================================================== 


[gcode_macro M107]
description: Override "M107" to allow multiple extruders.
gcode:

    {% if (params.P) is defined %} 
      M106 S0 P{params.P}
    {% else %}
      M106 S0
    {% endif %}

#===============================================================
 
[gcode_macro CARRIAGE_PRINT_FAN]
description: Set automatically the print fan speed for dual carriages modes 

#--- Carriages print cooling FANs ---
variable_fan: 'fan'    # carriage X1
variable_fan1: 'fan1'   # carriage X2

gcode:
     
    ### FAN speed  
    {% if params.SPEED is defined %}
        {% set fan_speed = params.SPEED|float %}
    {% else %}
        ### read print fan speed from active carriage/extruder        
        {% set fan_speed = printer["fan_generic " + fan].speed|float %}
        {% set fan1_speed = printer["fan_generic " + fan1].speed|float %}
        {% set fan_speed = [fan_speed, fan1_speed]|max %}
    {% endif %}


    ### Active FAN for carriage
    {% set active_toolhead =({'extruder':0,'extruder1':1,'extruder2':2,'extruder3':3})[printer['toolhead'].extruder] %}    
    
     {% if active_toolhead in [0,1] %}   
        ### FAN on carriage X1       
        SET_FAN_SPEED FAN={fan} SPEED={fan_speed}
        SET_FAN_SPEED FAN={fan1} SPEED=0

     {% elif active_toolhead in [2,3] %}   
        ### FAN on carriage X2        
        SET_FAN_SPEED FAN={fan} SPEED=0
        SET_FAN_SPEED FAN={fan1} SPEED={fan_speed}
    {% endif %}
    ```

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [stepper_z]
#*# position_endstop = 0.100
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 69.327
#*# pid_ki = 1.090
#*# pid_kd = 1102.303
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 34.956
#*# pid_ki = 2.618
#*# pid_kd = 116.667
